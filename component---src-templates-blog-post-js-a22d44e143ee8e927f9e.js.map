{"version":3,"sources":["webpack:///./src/components/LanguageSwitcher.js","webpack:///./src/templates/blog-post.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/utils/typography.js","webpack:///./src/components/Layout.js"],"names":["React","Component","Link","styled","a","withConfig","displayName","componentId","BlogPostTemplate","render","post","this","props","data","markdownRemark","console","log","siteTitle","get","siteDescription","excerpt","_this$props$pageConte","pageContext","previous","next","react_default","createElement","Layout","location","config","translations","frontmatter","Helmet_default","htmlAttributes","lang","language","meta","name","content","title","category","sub_category","style","display","href","date","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","to","fields","slug","rel","pageQuery","m","module","exports","require","default","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","createContext","StaticQueryDataRenderer","_ref","staticQueryData","query","finalData","Fragment","children","Consumer","ProdPageRenderer","pageResources","InternalPageRenderer","Object","assign","json","typography","Typography","headerFontFamily","bodyFontFamily","rhythm","scale","Container","div","_this$props"],"mappings":"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","file":"component---src-templates-blog-post-js-a22d44e143ee8e927f9e.js","sourcesContent":["import React from 'react'\nimport { Link, StaticQuery, graphql } from \"gatsby\"\n\nclass LanguageSwitcher extends React.Component {\n  render() {\n    const { language, translations } = this.props\n    return (\n      <StaticQuery\n        query={graphql`\n          query LanguageSwitcherQuery {\n            allMarkdownRemark(filter: { frontmatter: { type: {eq: \"language\"}}}) {\n              edges {\n                node {\n                  fields {\n                    slug\n                  }\n                  frontmatter {\n                    language\n                    language_label\n                  }\n                }\n              }\n            }\n          }\n        `}\n        render={data => (\n          <ul style={{ listStyle: `none`, marginBottom: 0 }}>\n            {data.allMarkdownRemark.edges.map(({ node }) => {\n              if (node.frontmatter.language == language) {\n                return\n              } else {\n                let translationLink = node.fields.slug\n                if (translations) {\n                  const translationIndex = translations.findIndex(v => v == node.frontmatter.language)\n                  if (translationIndex !== -1) {\n                    translationLink = translations[translationIndex+1]\n                  }\n                }\n                return (\n                  <li key={translationLink} style={{ display: `inline-block`, margin: `0 1rem 0 0` }}>\n                    <Link style={{\n                      boxShadow: 'none',\n                      textDecoration: 'none',\n                    }} to={translationLink}>\n                      {node.frontmatter.language_label}\n                    </Link>\n                  </li>\n                )\n              }\n            })}\n          </ul>\n        )}\n      />\n    )\n  }\n}\n\nexport default LanguageSwitcher\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport styled from \"styled-components\"\nimport { graphql } from 'gatsby'\nimport { get } from 'lodash'\n\nimport Layout from '../components/Layout'\nimport LanguageSwitcher from '../components/LanguageSwitcher'\n\nconst Link = styled.a `{\n  transition: color 0.6s ease;\n  text-decoration: none;\n  boxShadow: none;\n  color: #0071bc;\n\n  &:hover {\n    cursor: pointer;\n  }\n\n}\n`\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    console.log(post)\n    const siteTitle = get(this.props, `data.config.frontmatter.title`)\n    const siteBio = get(this, 'props.data.config.html')\n    const siteDescription = post.excerpt\n    const { previous, next } = this.props.pageContext\n\n    return (\n      <Layout location={this.props.location} config={this.props.data.config} translations={post.frontmatter.translations}>\n        <Helmet\n          htmlAttributes={{ lang: this.props.pageContext.language }}\n          meta={[{ name: 'description', content: siteDescription }]}\n          title={`${post.frontmatter.title} | ${siteTitle}`}\n        />\n        <h3>{post.frontmatter.category} > {post.frontmatter.sub_category} </h3>\n        <h1>{post.frontmatter.title}</h1>\n        <p style={{display: 'block'}}>\n          <Link href={\"/\"}> Gregorio Cabral </Link> - {post.frontmatter.date}\n        </p>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr/>\n\n        <ul\n          style={{\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'space-between',\n            listStyle: 'none',\n            padding: 0,\n          }}\n        >\n          <li>\n            {\n              previous &&\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            }\n          </li>\n          <li>\n            {\n              next &&\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            }\n          </li>\n        </ul>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!, $language: String!) {\n    config:markdownRemark(frontmatter: {\n      language: { eq: $language }\n      type: { eq: \"language\" }\n    }) {\n      html\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        language\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        translations\n        category\n        sub_category\n      }\n    }\n  }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import Typography from 'typography'\n\nconst typography = new Typography({\n  headerFontFamily: [\"Avenir Next\", \"Arial\"],\n  bodyFontFamily: [\"Avenir Next\", \"Arial\"],\n})\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== 'production') {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport styled from \"styled-components\"\n\nimport { rhythm } from '../utils/typography'\n\nconst Container = styled.div`\n  @media (min-width: 1200px) {\n    margin: 20px 20%;\n  }\n\n  @media (max-width: 1200px) {\n    margin: 20px 5%;\n  }\n`\n\nclass Layout extends React.Component {\n  render() {\n    const { location, config, children, translations } = this.props\n    return (\n      <Container>\n        {children}\n      </Container>\n    )\n  }\n}\n\nexport default Layout\n"],"sourceRoot":""}